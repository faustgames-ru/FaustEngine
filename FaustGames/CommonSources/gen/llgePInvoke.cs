/* ============================================================== */
/* This file is automatically generated. Please do not modify it. */
/* ============================================================== */

using System;
using System.Runtime.InteropServices;

namespace llge
{
	public class Version
	{
		public const string Dll = "llge";
	}
	
	public class RenderSystem
	{
		public IntPtr ClassInstance;
		public void Create ()
		{
			llge_RenderSystem_create(ClassInstance);
		}
		
		[DllImport(Version.Dll)]
		static extern private void llge_RenderSystem_create (IntPtr classInstance);
		public void Render ()
		{
			llge_RenderSystem_render(ClassInstance);
		}
		
		[DllImport(Version.Dll)]
		static extern private void llge_RenderSystem_render (IntPtr classInstance);
		public void Cleanup ()
		{
			llge_RenderSystem_cleanup(ClassInstance);
		}
		
		[DllImport(Version.Dll)]
		static extern private void llge_RenderSystem_cleanup (IntPtr classInstance);
		public void Dispose ()
		{
			llge_RenderSystem_dispose(ClassInstance);
		}
		
		[DllImport(Version.Dll)]
		static extern private void llge_RenderSystem_dispose (IntPtr classInstance);
	}
	
	public class Factory
	{
		public IntPtr ClassInstance;
		public RenderSystem CreateRenderSystem ()
		{
			return new RenderSystem{ ClassInstance = llge_Factory_createRenderSystem(ClassInstance) };
		}
		
		[DllImport(Version.Dll)]
		static extern private IntPtr llge_Factory_createRenderSystem (IntPtr classInstance);
		public void Dispose ()
		{
			llge_Factory_dispose(ClassInstance);
		}
		
		[DllImport(Version.Dll)]
		static extern private void llge_Factory_dispose (IntPtr classInstance);
	}
	
	public class llge
	{
		static public Factory CreateFactory ()
		{
			return new Factory{ ClassInstance = createFactory() };
		}
		
		[DllImport(Version.Dll)]
		static extern private IntPtr createFactory ();
	}
	
}

